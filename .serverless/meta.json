{
  "D:\\CURSOS\\Serverless_udemy\\serverless-framework": {
    "versionSfCore": null,
    "versionFramework": "4.4.18",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "pizzaApp",
            "provider": {
              "name": "aws",
              "runtime": "nodejs22.x",
              "profile": "personal",
              "region": "us-east-1",
              "environment": {
                "REGION": "us-east-1"
              },
              "memorySize": 512,
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:sendMessage"
                      ],
                      "Resource": {
                        "Fn::GetAtt": [
                          "PendingOrderQueue",
                          "Arn"
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:sendMessage"
                      ],
                      "Resource": {
                        "Fn::GetAtt": [
                          "OrdersToSendQueue",
                          "Arn"
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:GetItem"
                      ],
                      "Resource": {
                        "Fn::GetAtt": [
                          "OrdersTable",
                          "Arn"
                        ]
                      }
                    }
                  ]
                }
              },
              "stage": "dev",
              "versionFunctions": true
            },
            "functions": {
              "newOrder": {
                "handler": "handler.newOrder",
                "environment": {
                  "PENDING_ORDERS_QUEUE": {
                    "Ref": "PendingOrderQueue"
                  },
                  "ORDERS_TABLE": {
                    "Ref": "OrdersTable"
                  }
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/order",
                      "method": "post"
                    }
                  }
                ],
                "name": "pizzaApp-dev-newOrder"
              },
              "getOrder": {
                "handler": "handler.getOrder",
                "environment": {
                  "ORDERS_TABLE": {
                    "Ref": "OrdersTable"
                  }
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/order/{orderId}",
                      "method": "get"
                    }
                  }
                ],
                "name": "pizzaApp-dev-getOrder"
              },
              "prepOrder": {
                "handler": "handler.prepOrder",
                "environment": {
                  "ORDERS_TABLE": {
                    "Ref": "OrdersTable"
                  }
                },
                "events": [
                  {
                    "sqs": {
                      "arn": {
                        "Fn::GetAtt": [
                          "PendingOrderQueue",
                          "Arn"
                        ]
                      },
                      "batchSize": 1
                    }
                  }
                ],
                "name": "pizzaApp-dev-prepOrder"
              },
              "sendOrder": {
                "handler": "handler.sendOrder",
                "environment": {
                  "ORDERS_TO_SEND_QUEUE": {
                    "Ref": "OrdersToSendQueue"
                  }
                },
                "events": [
                  {
                    "stream": {
                      "type": "dynamodb",
                      "arn": {
                        "Fn::GetAtt": [
                          "OrdersTable",
                          "StreamArn"
                        ]
                      },
                      "filterPatterns": [
                        {
                          "eventName": [
                            "MODIFY"
                          ]
                        }
                      ],
                      "batchSize": 1
                    }
                  }
                ],
                "name": "pizzaApp-dev-sendOrder"
              }
            },
            "resources": {
              "Resources": {
                "PendingOrderQueue": {
                  "Type": "AWS::SQS::Queue",
                  "Properties": {
                    "QueueName": "pendingOrderQueue"
                  }
                },
                "OrdersToSendQueue": {
                  "Type": "AWS::SQS::Queue",
                  "Properties": {
                    "QueueName": "ordersToSendQueue"
                  }
                },
                "OrdersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "Orders",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "orderId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "orderId",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    },
                    "StreamSpecification": {
                      "StreamViewType": "NEW_AND_OLD_IMAGES"
                    }
                  }
                }
              }
            }
          },
          "configFileDirPath": "D:\\CURSOS\\Serverless_udemy\\serverless-framework",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "pizzaApp",
            "provider": {
              "name": "aws",
              "runtime": "nodejs22.x",
              "profile": "personal",
              "region": "us-east-1",
              "environment": {
                "REGION": "us-east-1"
              },
              "memorySize": 512,
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:sendMessage"
                      ],
                      "Resource": {
                        "Fn::GetAtt": [
                          "PendingOrderQueue",
                          "Arn"
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:sendMessage"
                      ],
                      "Resource": {
                        "Fn::GetAtt": [
                          "OrdersToSendQueue",
                          "Arn"
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:GetItem"
                      ],
                      "Resource": {
                        "Fn::GetAtt": [
                          "OrdersTable",
                          "Arn"
                        ]
                      }
                    }
                  ]
                }
              },
              "stage": "dev",
              "versionFunctions": true
            },
            "functions": {
              "newOrder": {
                "handler": "handler.newOrder",
                "environment": {
                  "PENDING_ORDERS_QUEUE": {
                    "Ref": "PendingOrderQueue"
                  },
                  "ORDERS_TABLE": {
                    "Ref": "OrdersTable"
                  }
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/order",
                      "method": "post"
                    }
                  }
                ],
                "name": "pizzaApp-dev-newOrder"
              },
              "getOrder": {
                "handler": "handler.getOrder",
                "environment": {
                  "ORDERS_TABLE": {
                    "Ref": "OrdersTable"
                  }
                },
                "events": [
                  {
                    "httpApi": {
                      "path": "/order/{orderId}",
                      "method": "get"
                    }
                  }
                ],
                "name": "pizzaApp-dev-getOrder"
              },
              "prepOrder": {
                "handler": "handler.prepOrder",
                "environment": {
                  "ORDERS_TABLE": {
                    "Ref": "OrdersTable"
                  }
                },
                "events": [
                  {
                    "sqs": {
                      "arn": {
                        "Fn::GetAtt": [
                          "PendingOrderQueue",
                          "Arn"
                        ]
                      },
                      "batchSize": 1
                    }
                  }
                ],
                "name": "pizzaApp-dev-prepOrder"
              },
              "sendOrder": {
                "handler": "handler.sendOrder",
                "environment": {
                  "ORDERS_TO_SEND_QUEUE": {
                    "Ref": "OrdersToSendQueue"
                  }
                },
                "events": [
                  {
                    "stream": {
                      "type": "dynamodb",
                      "arn": {
                        "Fn::GetAtt": [
                          "OrdersTable",
                          "StreamArn"
                        ]
                      },
                      "filterPatterns": [
                        {
                          "eventName": [
                            "MODIFY"
                          ]
                        }
                      ],
                      "batchSize": 1
                    }
                  }
                ],
                "name": "pizzaApp-dev-sendOrder"
              }
            },
            "resources": {
              "Resources": {
                "PendingOrderQueue": {
                  "Type": "AWS::SQS::Queue",
                  "Properties": {
                    "QueueName": "pendingOrderQueue"
                  }
                },
                "OrdersToSendQueue": {
                  "Type": "AWS::SQS::Queue",
                  "Properties": {
                    "QueueName": "ordersToSendQueue"
                  }
                },
                "OrdersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "Orders",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "orderId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "orderId",
                        "KeyType": "HASH"
                      }
                    ],
                    "ProvisionedThroughput": {
                      "ReadCapacityUnits": 1,
                      "WriteCapacityUnits": 1
                    },
                    "StreamSpecification": {
                      "StreamViewType": "NEW_AND_OLD_IMAGES"
                    }
                  }
                }
              }
            }
          },
          "configFileDirPath": "D:\\CURSOS\\Serverless_udemy\\serverless-framework",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "D:\\CURSOS\\Serverless_udemy\\serverless-framework",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "pizzaApp",
      "provider": {
        "name": "aws",
        "runtime": "nodejs22.x",
        "profile": "personal",
        "region": "us-east-1",
        "environment": {
          "REGION": "us-east-1"
        },
        "memorySize": 512,
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "sqs:sendMessage"
                ],
                "Resource": {
                  "Fn::GetAtt": [
                    "PendingOrderQueue",
                    "Arn"
                  ]
                }
              },
              {
                "Effect": "Allow",
                "Action": [
                  "sqs:sendMessage"
                ],
                "Resource": {
                  "Fn::GetAtt": [
                    "OrdersToSendQueue",
                    "Arn"
                  ]
                }
              },
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:GetItem"
                ],
                "Resource": {
                  "Fn::GetAtt": [
                    "OrdersTable",
                    "Arn"
                  ]
                }
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "newOrder": {
          "handler": "handler.newOrder",
          "environment": {
            "PENDING_ORDERS_QUEUE": {
              "Ref": "PendingOrderQueue"
            },
            "ORDERS_TABLE": {
              "Ref": "OrdersTable"
            }
          },
          "events": [
            {
              "httpApi": {
                "path": "/order",
                "method": "post"
              }
            }
          ],
          "name": "pizzaApp-dev-newOrder"
        },
        "getOrder": {
          "handler": "handler.getOrder",
          "environment": {
            "ORDERS_TABLE": {
              "Ref": "OrdersTable"
            }
          },
          "events": [
            {
              "httpApi": {
                "path": "/order/{orderId}",
                "method": "get"
              }
            }
          ],
          "name": "pizzaApp-dev-getOrder"
        },
        "prepOrder": {
          "handler": "handler.prepOrder",
          "environment": {
            "ORDERS_TABLE": {
              "Ref": "OrdersTable"
            }
          },
          "events": [
            {
              "sqs": {
                "arn": {
                  "Fn::GetAtt": [
                    "PendingOrderQueue",
                    "Arn"
                  ]
                },
                "batchSize": 1
              }
            }
          ],
          "name": "pizzaApp-dev-prepOrder"
        },
        "sendOrder": {
          "handler": "handler.sendOrder",
          "environment": {
            "ORDERS_TO_SEND_QUEUE": {
              "Ref": "OrdersToSendQueue"
            }
          },
          "events": [
            {
              "stream": {
                "type": "dynamodb",
                "arn": {
                  "Fn::GetAtt": [
                    "OrdersTable",
                    "StreamArn"
                  ]
                },
                "filterPatterns": [
                  {
                    "eventName": [
                      "MODIFY"
                    ]
                  }
                ],
                "batchSize": 1
              }
            }
          ],
          "name": "pizzaApp-dev-sendOrder"
        }
      },
      "resources": {
        "Resources": {
          "PendingOrderQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "pendingOrderQueue"
            }
          },
          "OrdersToSendQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "ordersToSendQueue"
            }
          },
          "OrdersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Orders",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orderId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orderId",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "StreamSpecification": {
                "StreamViewType": "NEW_AND_OLD_IMAGES"
              }
            }
          }
        }
      }
    },
    "serviceRawFile": "service: pizzaApp\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs22.x\r\n  profile: personal\r\n  region: us-east-1\r\n  environment:\r\n    REGION: ${self:provider.region}\r\n  memorySize: 512\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - sqs:sendMessage\r\n          Resource:\r\n            Fn::GetAtt: [PendingOrderQueue, Arn]\r\n        - Effect: Allow\r\n          Action:\r\n            - sqs:sendMessage\r\n          Resource:\r\n            Fn::GetAtt: [OrdersToSendQueue, Arn]\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:PutItem\r\n            - dynamodb:UpdateItem\r\n            - dynamodb:GetItem\r\n          Resource:\r\n            Fn::GetAtt: [OrdersTable, Arn]    \r\nfunctions:\r\n  newOrder:\r\n    handler: handler.newOrder\r\n    environment:\r\n      PENDING_ORDERS_QUEUE: \r\n        Ref: PendingOrderQueue\r\n      ORDERS_TABLE: \r\n        Ref: OrdersTable  \r\n    events:\r\n      - httpApi:\r\n          path: /order\r\n          method: post\r\n  getOrder:\r\n    handler: handler.getOrder\r\n    environment:\r\n      ORDERS_TABLE: \r\n        Ref: OrdersTable\r\n    events:\r\n      - httpApi:\r\n          path: /order/{orderId}\r\n          method: get\r\n  prepOrder:\r\n    handler: handler.prepOrder\r\n    environment:\r\n      ORDERS_TABLE: \r\n        Ref: OrdersTable\r\n    events:\r\n      - sqs:\r\n          arn:\r\n            Fn::GetAtt: [PendingOrderQueue, Arn]\r\n          batchSize: 1\r\n  sendOrder: \r\n    handler: handler.sendOrder\r\n    environment:\r\n      ORDERS_TO_SEND_QUEUE: \r\n        Ref: OrdersToSendQueue\r\n    events:\r\n      - stream:\r\n          type: dynamodb\r\n          arn: \r\n            Fn::GetAtt: [OrdersTable, StreamArn]\r\n          filterPatterns:\r\n            - eventName: [MODIFY]\r\n          batchSize: 1    \r\nresources:\r\n  Resources:\r\n    PendingOrderQueue:\r\n      Type: AWS::SQS::Queue\r\n      Properties:\r\n        QueueName: pendingOrderQueue\r\n    OrdersToSendQueue:\r\n      Type: AWS::SQS::Queue\r\n      Properties:\r\n        QueueName: ordersToSendQueue\r\n    OrdersTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: Orders\r\n        AttributeDefinitions:\r\n          - AttributeName: orderId \r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: orderId\r\n            KeyType: HASH\r\n        ProvisionedThroughput:\r\n          ReadCapacityUnits: 1\r\n          WriteCapacityUnits: 1\r\n        StreamSpecification:\r\n          StreamViewType: NEW_AND_OLD_IMAGES",
    "command": [
      "remove"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "b380d17ca3568e9fd64e50b68e45a766",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "18324ffb-74b1-4620-9c89-7cf6d6750d5e",
    "orgName": "javiermanitlla",
    "userId": "fGnJPgDxdbwtcWF3CN",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "javiermanitlla",
    "subscription": null,
    "userEmail": "jmantillap@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "590184132147",
    "projectType": "traditional",
    "versionSf": "4.4.18",
    "serviceProviderAwsCfStackName": "pizzaApp-dev",
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:590184132147:stack/pizzaApp-dev/47750070-bcd9-11ef-8001-0affeeb428c9",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:590184132147:stack/pizzaApp-dev/47750070-bcd9-11ef-8001-0affeeb428c9",
    "serviceProviderAwsCfStackCreated": "2024-12-18T00:44:46.670Z",
    "serviceProviderAwsCfStackUpdated": "2024-12-18T23:16:01.193Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "PrepOrderLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590184132147:function:pizzaApp-dev-prepOrder:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pizzaApp-dev-PrepOrderLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SendOrderLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590184132147:function:pizzaApp-dev-sendOrder:7",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pizzaApp-dev-SendOrderLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetOrderLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590184132147:function:pizzaApp-dev-getOrder:10",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pizzaApp-dev-GetOrderLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "pkqz9v5sp2",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-pizzaApp-dev-HttpApiId"
      },
      {
        "OutputKey": "NewOrderLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590184132147:function:pizzaApp-dev-newOrder:11",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pizzaApp-dev-NewOrderLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-d57deb8b-8a68",
        "ExportName": "sls-pizzaApp-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://pkqz9v5sp2.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-pizzaApp-dev-HttpApiUrl"
      }
    ],
    "integrations": {}
  }
}
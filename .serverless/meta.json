{
  "D:\\CURSOS\\Serverless_udemy\\serverless-framework": {
    "versionSfCore": null,
    "versionFramework": "4.4.18",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "pizzaApp",
            "provider": {
              "name": "aws",
              "runtime": "nodejs22.x",
              "profile": "personal",
              "memorySize": 512,
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "NewOrderLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/pizzaApp-dev-newOrder"
                    }
                  },
                  "GetOrderLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/pizzaApp-dev-getOrder"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "pizzaApp",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pizzaApp-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pizzaApp-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "pizzaApp",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "NewOrderLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-d57deb8b-8a68",
                        "S3Key": "serverless/pizzaApp/dev/1734485482193-2024-12-18T01:31:22.193Z/pizzaApp.zip"
                      },
                      "Handler": "handler.newOrder",
                      "Runtime": "nodejs22.x",
                      "FunctionName": "pizzaApp-dev-newOrder",
                      "MemorySize": 512,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "NewOrderLogGroup"
                    ]
                  },
                  "GetOrderLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-d57deb8b-8a68",
                        "S3Key": "serverless/pizzaApp/dev/1734485482193-2024-12-18T01:31:22.193Z/pizzaApp.zip"
                      },
                      "Handler": "handler.getOrder",
                      "Runtime": "nodejs22.x",
                      "FunctionName": "pizzaApp-dev-getOrder",
                      "MemorySize": 512,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetOrderLogGroup"
                    ]
                  },
                  "NewOrderLambdaVersionnw1Zmm6LwW6qzIsohDRb1SF4roEMJHtuOEg3ShG8rw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "NewOrderLambdaFunction"
                      },
                      "CodeSha256": "qF03wuZcBLIrUGkkyhqZfpBlqv21CLI2AsZ0svNk5+s="
                    }
                  },
                  "GetOrderLambdaVersionrRt3yJljV1bq1PMDHr52DuLTyVzU5o5kYKyioB0s": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetOrderLambdaFunction"
                      },
                      "CodeSha256": "qF03wuZcBLIrUGkkyhqZfpBlqv21CLI2AsZ0svNk5+s="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-pizzaApp",
                      "ProtocolType": "HTTP"
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "NewOrderLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "NewOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationNewOrder": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "NewOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostOrder": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /order",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationNewOrder"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationNewOrder"
                  },
                  "GetOrderLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationGetOrder": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "GetOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetOrderOrderidVar": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /order/{orderId}",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationGetOrder"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationGetOrder"
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-d57deb8b-8a68",
                    "Export": {
                      "Name": "sls-pizzaApp-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "NewOrderLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "NewOrderLambdaVersionnw1Zmm6LwW6qzIsohDRb1SF4roEMJHtuOEg3ShG8rw"
                    },
                    "Export": {
                      "Name": "sls-pizzaApp-dev-NewOrderLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetOrderLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetOrderLambdaVersionrRt3yJljV1bq1PMDHr52DuLTyVzU5o5kYKyioB0s"
                    },
                    "Export": {
                      "Name": "sls-pizzaApp-dev-GetOrderLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-pizzaApp-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-pizzaApp-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "newOrder": {
                "handler": "handler.newOrder",
                "events": [
                  {
                    "httpApi": {
                      "path": "/order",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/order"
                  }
                ],
                "name": "pizzaApp-dev-newOrder",
                "package": {},
                "memory": 512,
                "timeout": 6,
                "runtime": "nodejs22.x",
                "vpc": {},
                "versionLogicalId": "NewOrderLambdaVersionnw1Zmm6LwW6qzIsohDRb1SF4roEMJHtuOEg3ShG8rw"
              },
              "getOrder": {
                "handler": "handler.getOrder",
                "events": [
                  {
                    "httpApi": {
                      "path": "/order/{orderId}",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/order/{orderId}"
                  }
                ],
                "name": "pizzaApp-dev-getOrder",
                "package": {},
                "memory": 512,
                "timeout": 6,
                "runtime": "nodejs22.x",
                "vpc": {},
                "versionLogicalId": "GetOrderLambdaVersionrRt3yJljV1bq1PMDHr52DuLTyVzU5o5kYKyioB0s"
              }
            }
          },
          "configFileDirPath": "D:\\CURSOS\\Serverless_udemy\\serverless-framework",
          "config": {
            "type": "sls"
          },
          "options": {
            "aws-profile": "personal"
          },
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "D:\\CURSOS\\Serverless_udemy\\serverless-framework",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "pizzaApp",
      "provider": {
        "name": "aws",
        "runtime": "nodejs22.x",
        "profile": "personal",
        "memorySize": 512,
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "NewOrderLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/pizzaApp-dev-newOrder"
              }
            },
            "GetOrderLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/pizzaApp-dev-getOrder"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "pizzaApp",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pizzaApp-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pizzaApp-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "pizzaApp",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "NewOrderLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-d57deb8b-8a68",
                  "S3Key": "serverless/pizzaApp/dev/1734485482193-2024-12-18T01:31:22.193Z/pizzaApp.zip"
                },
                "Handler": "handler.newOrder",
                "Runtime": "nodejs22.x",
                "FunctionName": "pizzaApp-dev-newOrder",
                "MemorySize": 512,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "NewOrderLogGroup"
              ]
            },
            "GetOrderLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-d57deb8b-8a68",
                  "S3Key": "serverless/pizzaApp/dev/1734485482193-2024-12-18T01:31:22.193Z/pizzaApp.zip"
                },
                "Handler": "handler.getOrder",
                "Runtime": "nodejs22.x",
                "FunctionName": "pizzaApp-dev-getOrder",
                "MemorySize": 512,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetOrderLogGroup"
              ]
            },
            "NewOrderLambdaVersionnw1Zmm6LwW6qzIsohDRb1SF4roEMJHtuOEg3ShG8rw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "NewOrderLambdaFunction"
                },
                "CodeSha256": "qF03wuZcBLIrUGkkyhqZfpBlqv21CLI2AsZ0svNk5+s="
              }
            },
            "GetOrderLambdaVersionrRt3yJljV1bq1PMDHr52DuLTyVzU5o5kYKyioB0s": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetOrderLambdaFunction"
                },
                "CodeSha256": "qF03wuZcBLIrUGkkyhqZfpBlqv21CLI2AsZ0svNk5+s="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-pizzaApp",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "NewOrderLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "NewOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationNewOrder": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "NewOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostOrder": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /order",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationNewOrder"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationNewOrder"
            },
            "GetOrderLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetOrder": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetOrderOrderidVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /order/{orderId}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetOrder"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetOrder"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-d57deb8b-8a68",
              "Export": {
                "Name": "sls-pizzaApp-dev-ServerlessDeploymentBucketName"
              }
            },
            "NewOrderLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "NewOrderLambdaVersionnw1Zmm6LwW6qzIsohDRb1SF4roEMJHtuOEg3ShG8rw"
              },
              "Export": {
                "Name": "sls-pizzaApp-dev-NewOrderLambdaFunctionQualifiedArn"
              }
            },
            "GetOrderLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetOrderLambdaVersionrRt3yJljV1bq1PMDHr52DuLTyVzU5o5kYKyioB0s"
              },
              "Export": {
                "Name": "sls-pizzaApp-dev-GetOrderLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-pizzaApp-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-pizzaApp-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "newOrder": {
          "handler": "handler.newOrder",
          "events": [
            {
              "httpApi": {
                "path": "/order",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/order"
            }
          ],
          "name": "pizzaApp-dev-newOrder",
          "package": {},
          "memory": 512,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "NewOrderLambdaVersionnw1Zmm6LwW6qzIsohDRb1SF4roEMJHtuOEg3ShG8rw"
        },
        "getOrder": {
          "handler": "handler.getOrder",
          "events": [
            {
              "httpApi": {
                "path": "/order/{orderId}",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/order/{orderId}"
            }
          ],
          "name": "pizzaApp-dev-getOrder",
          "package": {},
          "memory": 512,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "GetOrderLambdaVersionrRt3yJljV1bq1PMDHr52DuLTyVzU5o5kYKyioB0s"
        }
      }
    },
    "serviceRawFile": "service: pizzaApp\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs22.x\r\n  profile: personal\r\n  memorySize: 512\r\n\r\nfunctions:\r\n  newOrder:\r\n    handler: handler.newOrder\r\n    events:\r\n      - httpApi:\r\n          path: /order\r\n          method: post\r\n  getOrder:\r\n    handler: handler.getOrder\r\n    events:\r\n      - httpApi:\r\n          path: /order/{orderId}\r\n          method: get        ",
    "command": [
      "deploy"
    ],
    "options": {
      "aws-profile": "personal"
    },
    "error": null,
    "params": {},
    "machineId": "056b0640efc7f67acf5d9684b2d2ec2e",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "18324ffb-74b1-4620-9c89-7cf6d6750d5e",
    "orgName": "javiermanitlla",
    "userId": "fGnJPgDxdbwtcWF3CN",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "javiermanitlla",
    "subscription": null,
    "userEmail": "jmantillap@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "590184132147",
    "projectType": "traditional",
    "versionSf": "4.4.18",
    "serviceProviderAwsCfStackName": "pizzaApp-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:590184132147:stack/pizzaApp-dev/47750070-bcd9-11ef-8001-0affeeb428c9",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:590184132147:stack/pizzaApp-dev/47750070-bcd9-11ef-8001-0affeeb428c9",
    "serviceProviderAwsCfStackCreated": "2024-12-18T00:44:46.670Z",
    "serviceProviderAwsCfStackUpdated": "2024-12-18T01:31:36.245Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetOrderLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590184132147:function:pizzaApp-dev-getOrder:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pizzaApp-dev-GetOrderLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "pkqz9v5sp2",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-pizzaApp-dev-HttpApiId"
      },
      {
        "OutputKey": "NewOrderLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590184132147:function:pizzaApp-dev-newOrder:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pizzaApp-dev-NewOrderLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-d57deb8b-8a68",
        "ExportName": "sls-pizzaApp-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://pkqz9v5sp2.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-pizzaApp-dev-HttpApiUrl"
      }
    ]
  }
}